name: Deploy to VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Determine inactive directory and port
        id: determine-inactive
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST << EOF
            if [ -f ~/active_dir ]; then
              ACTIVE_DIR=\$(cat ~/active_dir)
              if [ "\$ACTIVE_DIR" = "blue" ]; then
                echo "green 3001 3000" > ~/deployment_info
              else
                echo "blue 3000 3001" > ~/deployment_info
              fi
            else
              echo "blue 3000 3001" > ~/deployment_info
            fi
            cat ~/deployment_info
          EOF
        env:
          VM_USER: ${{ secrets.VM_USER }}
          VM_HOST: ${{ secrets.VM_HOST }}

      - name: Parse deployment info
        id: parse-info
        run: |
          info=$(ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST 'cat ~/deployment_info')
          IFS=' ' read -r new_dir new_port old_port <<< "$info"
          echo "::set-output name=new_dir::$new_dir"
          echo "::set-output name=new_port::$new_port"
          echo "::set-output name=old_port::$old_port"
        env:
          VM_USER: ${{ secrets.VM_USER }}
          VM_HOST: ${{ secrets.VM_HOST }}

      - name: Deploy new version
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST << EOF
            mkdir -p ~/simple-backend-api-${{ steps.parse-info.outputs.new_dir }}
            rm -rf ~/simple-backend-api-${{ steps.parse-info.outputs.new_dir }}/*
            exit
          EOF
          scp -r ./* $VM_USER@$VM_HOST:~/simple-backend-api-${{ steps.parse-info.outputs.new_dir }}
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST << EOF
            cd ~/simple-backend-api-${{ steps.parse-info.outputs.new_dir }}
            npm install
            nohup npm start --port ${{ steps.parse-info.outputs.new_port }} &
            sleep 10
            echo "${{ steps.parse-info.outputs.new_dir }}" > ~/active_dir
            pkill -f "node .*--port ${{ steps.parse-info.outputs.old_port }}" || true
            exit
          EOF
        env:
          VM_USER: ${{ secrets.VM_USER }}
          VM_HOST: ${{ secrets.VM_HOST }}
